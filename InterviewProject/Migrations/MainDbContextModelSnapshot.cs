// <auto-generated />
using System;
using InterviewProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InterviewProject.Migrations
{
    [DbContext(typeof(MainDbContext))]
    partial class MainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("InterviewProject.Data.Models.Auth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AuthRoleType")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Auths");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthRoleType = 1,
                            Password = "$2a$11$Qp1aeTjKvn4kCaydAe4C1uPVaL4fi.5Dxjy/OKb6kPWHSfQwWs4N6",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("InterviewProject.Data.Models.Contractor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContractDuration")
                        .HasColumnType("int");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Contractors");
                });

            modelBuilder.Entity("InterviewProject.Data.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("RoleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("InterviewProject.Data.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("JobType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("InterviewProject.Data.Models.MembersTags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("TagId");

                    b.ToTable("MembersAndTags");
                });

            modelBuilder.Entity("InterviewProject.Data.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Python"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ruby"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Java"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Angular"
                        },
                        new
                        {
                            Id = 6,
                            Name = "NodeJS"
                        },
                        new
                        {
                            Id = 7,
                            Name = "NetCore"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Flutter"
                        },
                        new
                        {
                            Id = 9,
                            Name = "React Native"
                        },
                        new
                        {
                            Id = 10,
                            Name = "C++"
                        },
                        new
                        {
                            Id = 11,
                            Name = "JavaScript"
                        });
                });

            modelBuilder.Entity("InterviewProject.Data.Models.Contractor", b =>
                {
                    b.HasOne("InterviewProject.Data.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("InterviewProject.Data.Models.Employee", b =>
                {
                    b.HasOne("InterviewProject.Data.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("InterviewProject.Data.Models.MembersTags", b =>
                {
                    b.HasOne("InterviewProject.Data.Models.Member", "Member")
                        .WithMany("MembersAndTags")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InterviewProject.Data.Models.Tag", "Tag")
                        .WithMany("MembersAndTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("InterviewProject.Data.Models.Member", b =>
                {
                    b.Navigation("MembersAndTags");
                });

            modelBuilder.Entity("InterviewProject.Data.Models.Tag", b =>
                {
                    b.Navigation("MembersAndTags");
                });
#pragma warning restore 612, 618
        }
    }
}
